name: 'Install OS Dependencies'
description: 'Installs OS-specific dependencies for E2E tests'

inputs:
  os:
    description: 'Operating system (Linux, macOS, Windows)'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Linux Dependencies
      if: inputs.os == 'Linux'
      shell: bash
      run: |
        # Setup repositories
        wget -qO - https://download.opensuse.org/repositories/Emulators:/Wine:/Debian/xUbuntu_22.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/wine.gpg > /dev/null
        wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.20.1/yq_linux_amd64 && chmod a+x /usr/local/bin/yq
        sudo apt-get update || true

        # Add Mesa PPA for better GPU support
        sudo add-apt-repository ppa:kisak/kisak-mesa -y
        sudo apt-get update

        # Install all necessary packages in one go
        sudo apt-get install -y \
          ca-certificates \
          libxtst-dev \
          libpng++-dev \
          gcc-aarch64-linux-gnu \
          g++-aarch64-linux-gnu \
          jq \
          icnsutils \
          graphicsmagick \
          tzdata \
          xsel \
          xvfb \
          dbus \
          dbus-x11 \
          libdbus-1-3 \
          libdbus-glib-1-2 \
          libgtk-3-0 \
          libasound2-dev \
          libgbm-dev \
          libdrm-dev \
          mesa-utils \
          libgl1 \
          libegl1 \
          libgles2 \
          libglvnd-dev \
          libglx0 \
          libx11-xcb1 \
          libxcb-dri3-0 \
          libxcb-dri3-dev \
          libxcb-present0 \
          libxcb-sync1 \
          libxshmfence1 \
          libvulkan1 \
          libxtst6 \
          libnss3 \
          libatk-bridge2.0-0 \
          libxss1 \
          x11-utils \
          xdg-utils \
          at-spi2-core

        # Create a script to fix the DBus session
        cat > /tmp/fix-dbus.sh << 'EOF'
        #!/bin/bash
        mkdir -p /tmp/dbus-session
        dbus-daemon --session --address=unix:path=/tmp/dbus-session/bus --fork --print-address > /tmp/dbus-address
        echo "export DBUS_SESSION_BUS_ADDRESS=unix:path=/tmp/dbus-session/bus" >> $HOME/.bashrc
        EOF

        sudo chmod +x /tmp/fix-dbus.sh
        /tmp/fix-dbus.sh

    - name: Install macOS Dependencies
      if: inputs.os == 'macOS'
      shell: bash
      run: |
        brew install nss
        jq '.mac.target=["zip"]' electron-builder.json | \
        jq '.mac.gatekeeperAssess=false' > /tmp/electron-builder.json && \
        cp /tmp/electron-builder.json .

    - name: Install Windows Dependencies
      if: inputs.os == 'Windows'
      shell: bash
      run: |
        choco install yq --version 4.15.1 -y
        choco install vcredist-all -y
        npm i -g node-gyp
        ELECTRON_VERSION=$(jq -r .devDependencies.electron package.json)
        node-gyp install
        node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$ELECTRON_VERSION --dist-url="https://electronjs.org/headers"
        node-gyp install --devdir="C:\Users\runneradmin\.electron-gyp" --target=$ELECTRON_VERSION --dist-url="https://electronjs.org/headers" --arch arm64
        npm install mochawesome-report-generator
